name: Terraform Apply CloudLab API

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Infra branch to deploy from'
        type: string
        required: true
        default: 'main'
      image_tag:
        description: 'GHCR image tag to run (e.g., v1.2.3 or latest)'
        type: string
        required: true
        default: 'latest'

permissions:
  contents: read
  packages: read

env:
  REGISTRY: ghcr.io
  IMAGE_BASENAME: cloudlab-terraform-api
  API_PORT: "8080"
  API_HOST: "localhost"

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra

    steps:
      - name: Checkout infra repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Compute image URL
        id: vars
        run: |
          owner_lc=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          echo "owner_lc=$owner_lc" >> $GITHUB_OUTPUT
          echo "image=${{ env.REGISTRY }}/${owner_lc}/${{ env.IMAGE_BASENAME }}:${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT

      - name: Login to GHCR (for private images)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull "${{ steps.vars.outputs.image }}"

      - name: Start CloudLab API container
        run: |
          set -euo pipefail
          docker rm -f cloudlab_api >/dev/null 2>&1 || true
          docker run -d --name cloudlab_api \
            -p ${{ env.API_PORT }}:8080 \
            "${{ steps.vars.outputs.image }}"
          echo "Container started: $(docker ps --filter name=cloudlab_api --format '{{.ID}} {{.Image}} {{.Ports}}')"

      - name: Wait for API /health
        run: |
          set -euo pipefail
          for i in {1..60}; do
            if curl -fsS "http://${{ env.API_HOST }}:${{ env.API_PORT }}/health" >/dev/null; then
              echo "API is healthy."
              exit 0
            fi
            echo "Waiting for API... ($i)"
            sleep 2
          done
          echo "API failed to become healthy in time"
          docker logs cloudlab_api || true
          exit 1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false

      - name: Terraform Apply (main only)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve tfplan

      - name: Teardown API container
        if: always()
        run: docker rm -f cloudlab_api || true
